{"version":3,"sources":["app/modules/UserProfile/AccountInformation.js","app/modules/UserProfile/ProfileOverview.js","app/modules/UserProfile/ForgottenPassword.js","app/modules/UserProfile/ChangePassword.js","app/modules/UserProfile/PersonaInformation.js","app/modules/UserProfile/EmailSettings.js","app/modules/UserProfile/RequestPage.js","app/modules/UserProfile/components/ProfileCard.js","app/modules/UserProfile/UserProfilePage.js"],"names":["connect","auth","props","useState","loading","setloading","dispatch","useDispatch","user","useSelector","state","shallowEqual","useEffect","initialValues","username","email","Schema","Yup","shape","required","language","timeZone","communicationEmail","communicationSMS","communicationPhone","getInputClasses","fieldname","formik","touched","errors","useFormik","validationSchema","onSubmit","values","setStatus","setSubmitting","updatedUser","Object","assign","communication","sms","phone","setUser","setTimeout","saveUser","onReset","resetForm","className","handleSubmit","style","color","type","disabled","isSubmitting","isValid","to","name","getFieldProps","placeholder","checked","onChange","handleChange","ProfileOverview","ForgottenPassword","setLoading","message","setMessage","setColor","schema","enableReinitialize","requestOptions","headers","Authorization","method","body","JSON","stringify","fullname","emailAziendale","fetch","config","apiUrl","then","response","json","data","Modal","show","onHide","handleClose","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","Form","Row","Group","Label","Control","value","padding","width","height","display","role","Footer","Button","variant","onClick","setShow","handleShow","currentPassword","password","cPassword","when","is","val","length","oneOf","idUser","PersonaInformation","pic","setPic","label","countryUser","setCountryUser","regionUser","setRegionUser","provinceUser","setProvinceUser","cityUser","setCityUser","province","setProvince","country","setCountry","regione","setRegione","city","setCity","phoneMessage","setPhoneMessage","emailMessage","setEmailMessage","emailAziendaleMessage","setEmailAziendaleMessage","messagePhone","setMessagePhone","messageEmail","setMessageEmail","messageEmailAziendale","setMessageEmailAziendale","result","setResult","GetCountry","a","rawData","find","o","GetProvince","idRegion","GetCity","idProvince","GetRegione","region","firstname","matches","lastname","companyName","notRequired","min","max","vatNumber","moduleName","department","nameDepartment","ssn","zip_code","birthday","undefined","vat_number","address","iban","formResult","FormData","append","preventDefault","Skeleton","animation","File","accept","visibility","e","target","files","htmlFor","options","emailNotification","emailSettings","sendCopyToPersonalEmail","youHaveNewNotifications","activityRelatesEmail","youAreSentADirectMessage","someoneAddsYouAsAsAConnection","uponNewOrder","newMembershipApproval","memberRegistration","newsAboutKeenthemesProductsAndFeatureUpdates","updatesFromKeenthemes","tipsOnGettingMoreOutOfKeen","thingsYouMissedSindeYouLastLoggedIntoKeen","newsAboutMetronicOnPartnerProductsAndOtherServices","tipsOnMetronicBusinessProducts","RequestPage","ProfileCard","backgroundImage","activeClassName","src","toAbsoluteUrl","UserProfilePage","useSubheader","setTitle","from","exact","path","component","AccountInformation","ChangePassword","EmailSettings"],"mappings":"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","file":"static/js/10.d31cfccc.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\r\nimport * as auth from \"../Auth\";\r\n\r\nfunction AccountInformation(props) {\r\n  // Fields\r\n  const [loading, setloading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.auth.user, shallowEqual);\r\n  useEffect(() => {}, [user]);\r\n\r\n  // Methods\r\n  const saveUser = (values, setStatus, setSubmitting) => {\r\n    setloading(true);\r\n    const updatedUser = Object.assign(user, {\r\n      username: values.username,\r\n      email: values.email,\r\n      language: values.language,\r\n      timeZone: values.timeZone,\r\n      communication: {\r\n        email: values.communicationEmail,\r\n        sms: values.communicationSMS,\r\n        phone: values.communicationPhone,\r\n      },\r\n    });\r\n    // user for update preparation\r\n    dispatch(props.setUser(updatedUser));\r\n    setTimeout(() => {\r\n      setloading(false);\r\n      setSubmitting(false);\r\n      // Do request to your server for user update, we just imitate user update there, For example:\r\n      // update(updatedUser)\r\n      //  .then(()) => {\r\n      //    setloading(false);\r\n      //  })\r\n      //  .catch((error) => {\r\n      //    setloading(false);\r\n      //    setSubmitting(false);\r\n      //    setStatus(error);\r\n      // });\r\n    }, 1000);\r\n  };\r\n  // UI Helpers\r\n  const initialValues = {\r\n    username: user.username,\r\n    email: user.email,\r\n    \r\n  };\r\n  const Schema = Yup.object().shape({\r\n    username: Yup.string().required(\"Username is required\"),\r\n    email: Yup.string()\r\n      .email(\"Wrong email format\")\r\n      .required(\"Email is required\"),\r\n    language: Yup.string(),\r\n    timeZone: Yup.string(),\r\n    communicationEmail: Yup.bool(),\r\n    communicationSMS: Yup.bool(),\r\n    communicationPhone: Yup.bool(),\r\n  });\r\n  const getInputClasses = (fieldname) => {\r\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\r\n      return \"is-invalid\";\r\n    }\r\n\r\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\r\n      return \"is-valid\";\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      saveUser(values, setStatus, setSubmitting);\r\n    },\r\n    onReset: (values, { resetForm }) => {\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form className=\"card card-custom\" onSubmit={formik.handleSubmit}>\r\n      {loading && <ModalProgressBar />}\r\n\r\n      {/* begin::Header */}\r\n      <div className=\"card-dashboard py-3\">\r\n        <div className=\"card-dashboard align-items-start flex-column\" style = {{color: \"white !important\"}}>\r\n          <h3 className=\"card-label font-weight-bolder \" style = {{color: \"white !important\"}}>\r\n            Informazioni account\r\n          </h3>\r\n          <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n            Cambia le impostazioni del tuo account\r\n          </span>\r\n        </div>\r\n        <div className=\"card-dashboard\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-success mr-2\"\r\n            disabled={\r\n              formik.isSubmitting || (formik.touched && !formik.isValid)\r\n            }\r\n          >\r\n            Salva\r\n            {formik.isSubmitting}\r\n          </button>\r\n          <Link\r\n            to=\"/user-profile/profile-overview\"\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            Elimina\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Form */}\r\n      <div className=\"form\">\r\n        <div className=\"card-body\">\r\n          {/* begin::Heading */}\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mb-6\">Account:</h5>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">Account</label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                    \"username\"\r\n                  )}`}\r\n                  name=\"account\"\r\n                  {...formik.getFieldProps(\"username\")}\r\n                />\r\n                {formik.touched.username && formik.errors.username ? (\r\n                  <div className=\"invalid-feedback\">\r\n                    {formik.errors.username}\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Email \r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"input-group input-group-lg input-group-solid\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">\r\n                    <i className=\"fa fa-at\"></i>\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                    \"email\"\r\n                  )}`}\r\n                  name=\"email\"\r\n                  {...formik.getFieldProps(\"email\")}\r\n                />\r\n                {formik.touched.email && formik.errors.email ? (\r\n                  <div className=\"invalid-feedback\">{formik.errors.email}</div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row align-items-center\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Richieste\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"checkbox-inline\">\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"communicationEmail\"\r\n                    checked={formik.values.communicationEmail}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Email\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"communicationSMS\"\r\n                    checked={formik.values.communicationSMS}\r\n                    {...formik.getFieldProps(\"communicationSMS\")}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>SMS\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"communicationPhone\"\r\n                    checked={formik.values.communicationPhone}\r\n                    {...formik.getFieldProps(\"communicationPhone\")}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Telefono\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"separator separator-dashed my-5\"></div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mb-6\">Sicurezza:</h5>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Verifica Login\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bold btn-sm\"\r\n              >\r\n                Impostazioni verifica login\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Verifica password\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"checkbox-inline\">\r\n                <label className=\"checkbox m-0\">\r\n                  <input type=\"checkbox\" />\r\n                  <span></span> Richiedi informazioni personali per il ripristino della tua password.\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Form */}\r\n    </form>\r\n  );\r\n}\r\nexport default connect(null, auth.actions)(AccountInformation);\r\n","import React from \"react\";\r\n\r\nimport {  ListsWidget10 } from '../../../_metronic/_partials/widgets';\r\n\r\n// import { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\n\r\nexport function ProfileOverview() {\r\n  return (\r\n    <div className=\"row\">\r\n\r\n      <div className=\"col-lg-12\">\r\n\r\n      <div className=\"col-lg-12\">\r\n\r\n        <ListsWidget10 className=\"card-stretch gutter-b\"></ListsWidget10>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button, Modal } from \"react-bootstrap\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport config from \"../../../config/config\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const ForgottenPassword = (props) => {\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [color, setColor] = useState(\"\");\r\n\r\n  const schema = Yup.object({\r\n    email: Yup.string()\r\n      .email(\"Inserire una email valida\")\r\n      .required(\"Inserire la mail di login per recuperare la password\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n    },\r\n    validationSchema: schema,\r\n    enableReinitialize: true,\r\n    onSubmit: (values) => {\r\n      const requestOptions = {\r\n        headers: {\r\n          Authorization:\r\n            \"271c4d716fcf0e9555b51cffed666b4321f98f7f8bbeb9ae8bfc67752b4db8a2\",\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          fullname: user.fullname,\r\n          email: user.emailAziendale === \"undefined\" ? user.email : user.emailAziendale,\r\n          values: values,\r\n        }),\r\n      };\r\n      setLoading(true);\r\n      fetch(config.apiUrl + \"users/ForgottenPassword.php\", requestOptions)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setColor(data[\"color\"]);\r\n          setMessage(data[\"message\"]);\r\n        })\r\n        .then(() => setLoading(false));\r\n    },\r\n  });\r\n\r\n  const getInputClassesForHandle = (fieldname) => {\r\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\r\n      return \"is-invalid\";\r\n    }\r\n\r\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\r\n      return \"is-valid\";\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={props.show}\r\n        onHide={props.handleClose}\r\n        size=\"lg\"\r\n        aria-labelledby=\"cantained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton={true}>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Recupero password\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {loading === false ? (\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <Form.Row>\r\n                <Form.Group className=\"col-12\">\r\n                  <Form.Label className=\"col-12\">Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={formik.values.email}\r\n                    name=\"email\"\r\n                    onChange={formik.handleChange}\r\n                    className={`form-control ${getInputClassesForHandle(\r\n                      \"email\"\r\n                    )}`}\r\n                    placeholder=\"Inserisci email...\"\r\n                  />\r\n                  {message === \"\" ? (\r\n                    <label className=\"text-muted col-12 mt-4\">\r\n                      Inserire email utilizzata per il login, verrà inviata una\r\n                      mail di recupero\r\n                    </label>\r\n                  ) : (\r\n                    <p style={{ color: color }}>{message}</p>\r\n                  )}\r\n                </Form.Group>\r\n                {formik.touched.email && formik.errors.email ? (\r\n                  <div className=\"fv-plugins-message-container\">\r\n                    <div className=\"fv-help-block\">{formik.errors.email}</div>\r\n                  </div>\r\n                ) : null}\r\n              </Form.Row>\r\n            </Form>\r\n          ) : (\r\n            <div className=\"divLoading\" style={{ padding: \"50px\" }}>\r\n              <span\r\n                className=\"spinner-border\"\r\n                style={\r\n                  loading\r\n                    ? { width: \"6rem\", height: \"6rem\" }\r\n                    : { display: \"none\" }\r\n                }\r\n                role=\"status\"\r\n              >\r\n                <span className=\"sr-only\">Caricamento...</span>\r\n              </span>\r\n              <p className=\"my-7 mt-4\">Recupero password in corso...</p>\r\n            </div>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"primary\"\r\n            className=\"float-right\"\r\n            onClick={formik.handleSubmit}\r\n          >\r\n            Recupera\r\n          </Button>\r\n          <Button\r\n            variant=\"secondary\"\r\n            className=\"float-right\"\r\n            onClick={props.handleClose}\r\n          >\r\n            Annulla\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState } from \"react\";\r\nimport { useSelector, shallowEqual, connect } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\r\nimport * as auth from \"../Auth\";\r\nimport config from \"../../../config/config\";\r\nimport { ForgottenPassword } from './ForgottenPassword';\r\n\r\nfunction ChangePassword(props) {\r\n  // Fields\r\n  const [loading, setloading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [color, setColor] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleClose = () => setShow(false);\r\n  const user = useSelector((state) => state.auth.user, shallowEqual);\r\n\r\n  // UI Helpers\r\n  const initialValues = {\r\n    currentPassword: \"\",\r\n    password: \"\",\r\n    cPassword: \"\",\r\n  };\r\n  const Schema = Yup.object().shape({\r\n    currentPassword: Yup.string().required(\"Inserisci la password attuale\"),\r\n    password: Yup.string().required(\"Inserisci una nuova password\"),\r\n    cPassword: Yup.string()\r\n      .required(\"Devi confermare la nuova password\")\r\n      .when(\"password\", {\r\n        is: (val) => (val && val.length > 7 ? true : false),\r\n        then: Yup.string().oneOf(\r\n          [Yup.ref(\"password\")],\r\n          \"Le due password non corrispondono\"\r\n        ),\r\n      }),\r\n  });\r\n  const getInputClasses = (fieldname) => {\r\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\r\n      return \"is-invalid\";\r\n    }\r\n\r\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\r\n      return \"is-valid\";\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: (values) => {\r\n      const requestOptions = {\r\n        headers: {\r\n          Authorization:\r\n            \"271c4d716fcf0e9555b51cffed666b4321f98f7f8bbeb9ae8bfc67752b4db8a2\",\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          fullname: user.fullname,\r\n          email: user.emailAziendale === \"undefined\" ? user.email : user.emailAziendale,\r\n          idUser: user.id,\r\n          values: values,\r\n        }),\r\n      };\r\n      setloading(true);\r\n      fetch(config.apiUrl + \"users/UpdatePassword.php\", requestOptions)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setMessage(data[\"message\"]);\r\n          setColor(data[\"color\"]);\r\n        })\r\n        .then(() => setloading(false));\r\n    },\r\n    onReset: (values, { resetForm }) => {\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n    <ForgottenPassword \r\n      show = {show}\r\n      handleShow = {handleShow}\r\n      handleClose = {handleClose}\r\n    />\r\n\r\n    <form className=\"card card-custom\" onSubmit={formik.handleSubmit}>\r\n      {loading && <ModalProgressBar />}\r\n\r\n      {/* begin::Header */}\r\n      <div className=\"card-dashboard py-3\">\r\n        <div className=\"card-title align-items-start flex-column\">\r\n          <h3 className=\"card-label font-weight-bolder text-dark\">\r\n            Cambia Password\r\n          </h3>\r\n          <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n            Cambia la password del tuo account\r\n          </span>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Form */}\r\n      <div className=\"form\">\r\n        <div className=\"card-body\">\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label text-alert\">\r\n              Password corrente\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Password corrente\"\r\n                className={`form-control form-control-lg form-control-solid mb-2 ${getInputClasses(\r\n                  \"currentPassword\"\r\n                )}`}\r\n                name=\"currentPassword\"\r\n                {...formik.getFieldProps(\"currentPassword\")}\r\n              />\r\n              {message === \"\" ? null : (\r\n                <p style={{ color: color }}>{message}</p>\r\n              )}\r\n              {formik.touched.currentPassword &&\r\n              formik.errors.currentPassword ? (\r\n                <div className=\"invalid-feedback\">\r\n                  {formik.errors.currentPassword}\r\n                </div>\r\n              ) : null}\r\n              <a onClick={handleShow} className=\"text-sm font-weight-bold\">\r\n                Hai dimenticato la password ?\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label text-alert\">\r\n              Nuova password\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Nuova password\"\r\n                className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                  \"password\"\r\n                )}`}\r\n                name=\"password\"\r\n                {...formik.getFieldProps(\"password\")}\r\n              />\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <div className=\"invalid-feedback\">{formik.errors.password}</div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label text-alert\">\r\n              Verifica la password\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Verifica la password\"\r\n                className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                  \"cPassword\"\r\n                )}`}\r\n                name=\"cPassword\"\r\n                {...formik.getFieldProps(\"cPassword\")}\r\n              />\r\n              {formik.touched.cPassword && formik.errors.cPassword ? (\r\n                <div className=\"invalid-feedback\">\r\n                  {formik.errors.cPassword}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"card-toolbar\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-success my-5  float-right\"\r\n              disabled={\r\n                (formik.touched && !formik.isValid)\r\n              }\r\n            >\r\n              Conferma\r\n              {formik.handleSubmit}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Form */}\r\n    </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(null, auth.actions)(ChangePassword);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport config from \"../../../config/config\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport \"../../../style.css\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport Select from \"react-select\";\r\n\r\nexport default function PersonaInformation(props) {\r\n  /*eslint-disable */\r\n  const user = useSelector((state) => state.auth.user);\r\n  // Fields\r\n  const [loading, setloading] = useState(false);\r\n  const [pic, setPic] = useState();\r\n\r\n  const [countryUser, setCountryUser] = useState({ label: \"\", value: \"\" });\r\n  const [regionUser, setRegionUser] = useState({ label: \"\", value: \"\" });\r\n  const [provinceUser, setProvinceUser] = useState({ label: \"\", value: \"\" });\r\n  const [cityUser, setCityUser] = useState({ label: \"\", value: \"\" });\r\n\r\n  //STATO PER GESTIRE LA SELEZIONE DI NAZIONE, REGIONE, CITTÀ\r\n  const [province, setProvince] = useState([]);\r\n  const [country, setCountry] = useState([]);\r\n  const [regione, setRegione] = useState([]);\r\n  const [city, setCity] = useState([]);\r\n  const [phoneMessage, setPhoneMessage] = useState(\"\");\r\n  const [emailMessage, setEmailMessage] = useState(\"\");\r\n  const [emailAziendaleMessage, setEmailAziendaleMessage] = useState(\"\");\r\n  const [messagePhone, setMessagePhone] = useState(false);\r\n  const [messageEmail, setMessageEmail] = useState(false);\r\n  const [messageEmailAziendale, setMessageEmailAziendale] = useState(false);\r\n  const [result, setResult] = useState(false);\r\n\r\n  const [selectedCountry, setSelectedCountry] = useState(0);\r\n  const [selectedRegion, setSelectedRegion] = useState(0);\r\n  const [selectedProvince, setSelectedProvince] = useState(0);\r\n  const [selectedCity, setSelectedCity] = useState(0);\r\n\r\n  const GetCountry = async () => {\r\n    const requestOptions = {\r\n      headers: {\r\n        Authorization:\r\n          \"271c4d716fcf0e9555b51cffed666b4321f98f7f8bbeb9ae8bfc67752b4db8a2\",\r\n      },\r\n      method: \"POST\",\r\n    };\r\n\r\n    var rawData = await fetch(\r\n      config.apiUrl + \"geolocal/GetCountries.php\",\r\n      requestOptions\r\n    );\r\n    var data = await rawData.json();\r\n    setCountry(data);\r\n    setCountryUser(data.find((o) => o.label === user.country));\r\n  };\r\n\r\n  const GetProvince = async () => {\r\n    const requestOptions = {\r\n      headers: {\r\n        Authorization:\r\n          \"271c4d716fcf0e9555b51cffed666b4321f98f7f8bbeb9ae8bfc67752b4db8a2\",\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        idRegion: regionUser.value,\r\n      }),\r\n    };\r\n\r\n    var rawData = await fetch(\r\n      config.apiUrl + \"geolocal/GetProvinces.php\",\r\n      requestOptions\r\n    );\r\n    var data = await rawData.json();\r\n    setProvince(data);\r\n    setProvinceUser(data.find((o) => o.label === user.province));\r\n  };\r\n\r\n  const GetCity = async () => {\r\n    const requestOptions = {\r\n      headers: {\r\n        Authorization:\r\n          \"271c4d716fcf0e9555b51cffed666b4321f98f7f8bbeb9ae8bfc67752b4db8a2\",\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        idProvince: provinceUser.value,\r\n      }),\r\n    };\r\n    var rawData = await fetch(\r\n      config.apiUrl + \"geolocal/GetCities.php\",\r\n      requestOptions\r\n    );\r\n    var data = await rawData.json();\r\n    setCity(data);\r\n    setCityUser(data.find((o) => o.label === user.city));\r\n  };\r\n\r\n  const GetRegione = async () => {\r\n    const requestOptions = {\r\n      headers: {\r\n        Authorization:\r\n          \"271c4d716fcf0e9555b51cffed666b4321f98f7f8bbeb9ae8bfc67752b4db8a2\",\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({}),\r\n    };\r\n    var rawData = await fetch(\r\n      config.apiUrl + \"geolocal/GetRegions.php\",\r\n      requestOptions\r\n    );\r\n    var data = await rawData.json();\r\n    setRegione(data);\r\n    setRegionUser(data.find((o) => o.label === user.region));\r\n  };\r\n\r\n  const Schema = Yup.object().shape({\r\n    firstname: Yup.string()\r\n      .required(\"Campo richiesto\")\r\n      .matches(\r\n        /^[aA-zZ\\s]+$/,\r\n        \"Non sono ammessi caratteri numerici per questo campo\"\r\n      ),\r\n    lastname: Yup.string()\r\n      .required(\"Campo richiesto\")\r\n      .matches(\r\n        /^[aA-zZ\\s]+$/,\r\n        \"Non sono ammessi caratteri numerici per questo campo\"\r\n      ),\r\n    companyName: Yup.string()\r\n      .notRequired()\r\n      .min(3, \"Minimo 3 caratteri\")\r\n      .max(50, \"Massimo 50 caratteri\"),\r\n    phone: Yup.string().required(\"Campo richiesto\"),\r\n    email: Yup.string()\r\n      .email(\"Inserire una email valida\")\r\n      .required(\"Campo richiesto\"),\r\n    vatNumber: Yup.string(\"Inserire una partita IVA valida\").notRequired(),\r\n  });\r\n\r\n  const getInputClasses = (fieldname) => {\r\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\r\n      return \"is-invalid\";\r\n    }\r\n\r\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\r\n      return \"is-valid\";\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstname: user.firstname,\r\n      lastname: user.lastname,\r\n      moduleName: user.moduleName,\r\n      department: user.nameDepartment,\r\n      ssn: user.ssn === \"undefined\" || user.ssn === \"null\" ? \"\" : user.ssn,\r\n      companyName: user.companyName,\r\n      phone: user.phone,\r\n      email: user.email,\r\n      emailAziendale:\r\n        user.emailAziendale === \"undefined\" ? \"\" : user.emailAziendale,\r\n      zip_code: user.zip_code,\r\n      birthday: user.birthday,\r\n      region: regionUser !== undefined ? regionUser.label : \"\",\r\n      country: countryUser !== undefined ? countryUser.label : \"\",\r\n      province: provinceUser !== undefined ? provinceUser.label : \"\",\r\n      vatNumber: user.vat_number,\r\n      city: cityUser !== undefined ? cityUser.label : \"\",\r\n      address: user.address,\r\n      iban: user.iban,\r\n    },\r\n    validationSchema: Schema,\r\n    onSubmit: (values) => {\r\n      const formResult = new FormData();\r\n      for (let value in values) {\r\n        if (countryUser !== \"Italia\") {\r\n          formResult.append(value, values[value]);\r\n        } else {\r\n          if (\r\n            values[value] !== formik.values.province ||\r\n            values[value] !== formik.values.country ||\r\n            values[value] !== formik.values.city ||\r\n            values[value] !== formik.values.region\r\n          ) {\r\n            formResult.append(value, values[value]);\r\n          }\r\n        }\r\n      }\r\n      formResult.append(\"pic\", pic);\r\n      formResult.append(\"idUser\", user.id);\r\n      if (countryUser.label === \"Italia\") {\r\n        formResult.append(\"country\", countryUser.label);\r\n        formResult.append(\"region\", regionUser.label);\r\n        formResult.append(\"province\", provinceUser.label);\r\n        formResult.append(\"city\", cityUser.label);\r\n      }\r\n      const requestOptions = {\r\n        headers: {\r\n          Authorization:\r\n            \"271c4d716fcf0e9555b51cffed666b4321f98f7f8bbeb9ae8bfc67752b4db8a2\",\r\n        },\r\n        method: \"POST\",\r\n        body: formResult,\r\n      };\r\n      setloading(true);\r\n      fetch(config.apiUrl + \"users/UploadProfile.php\", requestOptions)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setResult(data[\"result\"]);\r\n          setPhoneMessage(data[\"phone\"][\"message\"]); //string\r\n          setEmailMessage(data[\"email\"][\"message\"]); //string\r\n          setEmailAziendaleMessage([\"emailAziendale\"][\"message\"]); //string\r\n          setMessagePhone(data[\"phone\"][\"result\"]); //boolean\r\n          setMessageEmail(data[\"email\"][\"result\"]); //boolean\r\n          setMessageEmailAziendale(data[\"emailAziendale\"][\"result\"]); //boolean\r\n        })\r\n        .then(() => setloading(false));\r\n      values.preventDefault();\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    GetCountry();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (countryUser !== undefined) {\r\n      if (countryUser.label === \"Italia\") {\r\n        GetRegione();\r\n      } else {\r\n        setRegione([]);\r\n      }\r\n    }\r\n  }, [countryUser]);\r\n\r\n  useEffect(() => {\r\n    if (regionUser !== undefined) {\r\n      if (regionUser.value !== \"\") {\r\n        GetProvince();\r\n      }\r\n    }\r\n  }, [regionUser]);\r\n\r\n  useEffect(() => {\r\n    if (provinceUser !== undefined) {\r\n      if (provinceUser.value !== \"\") {\r\n        GetCity();\r\n      }\r\n    }\r\n  }, [provinceUser]);\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        className=\"card card-custom card-stretch\"\r\n        onSubmit={formik.handleSubmit}\r\n      >\r\n        {/* begin::Header */}\r\n        <div className=\"card-dashboard py-3\">\r\n          <div className=\"card-title align-items-start flex-column\">\r\n            <h3 className=\"card-label font-weight-bolder text-dark\">\r\n              Informazioni personali\r\n            </h3>\r\n            <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n              Aggiorna le tue informazioni personali\r\n            </span>\r\n          </div>\r\n        </div>\r\n        {/* end::Header */}\r\n        {/* begin::Form */}\r\n        <div className=\"form\">\r\n          {/* begin::Body */}\r\n          <div className=\"card-body\">\r\n            <div className=\"row\">\r\n              <div className=\"row\">\r\n                <h6 className=\"col-12 mb-6\">Anagrafica</h6>\r\n\r\n                <Form.Group className=\"col-12\">\r\n                  <Form.Label>Immagine profilo</Form.Label>\r\n                  {!loading ? (\r\n                    <div className=\"custom-file\">\r\n                      <Form.File\r\n                        type=\"file\"\r\n                        accept=\"image/jpeg, image/png, image/jpg\"\r\n                        className=\"custom-file-input\"\r\n                        id=\"customFile\"\r\n                        style={{ visibility: \"hidden\" }}\r\n                        onChange={(e) => setPic(e.target.files[0])}\r\n                      />\r\n                      <label\r\n                        className=\"col-6 custom-file-label\"\r\n                        htmlFor=\"customFile\"\r\n                      >\r\n                        {pic ? pic.name : \"Seleziona file: jpg, jpeg, png\"}\r\n                      </label>\r\n                    </div>\r\n                  ) : (\r\n                    <Skeleton animation=\"wave\" variant=\"text\" />\r\n                  )}\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"col-6\">\r\n                  <Form.Label className=\"col-12\">Nome</Form.Label>\r\n                  {!loading ? (\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"firstname\"\r\n                      className={getInputClasses(\"firstname\")}\r\n                      {...formik.getFieldProps(\"firstname\")}\r\n                      value={formik.values.firstname}\r\n                      onChange={formik.handleChange}\r\n                    />\r\n                  ) : (\r\n                    <Skeleton animation=\"wave\" variant=\"text\" />\r\n                  )}\r\n                  {formik.touched.firstname && formik.errors.firstname ? (\r\n                    <div className=\"fv-plugins-message-container\">\r\n                      <div className=\"fv-help-block\">\r\n                        {formik.errors.firstname}\r\n                      </div>\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Form.Group className=\"col-6\">\r\n                  <Form.Label className=\"col-12\">Cognome</Form.Label>\r\n                  {!loading ? (\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"lastname\"\r\n                      className={getInputClasses(\"lastname\")}\r\n                      {...formik.getFieldProps(\"lastname\")}\r\n                      value={formik.values.lastname}\r\n                      onChange={formik.handleChange}\r\n                    />\r\n                  ) : (\r\n                    <Skeleton animation=\"wave\" variant=\"text\" />\r\n                  )}\r\n                  {formik.touched.lastname && formik.errors.lastname ? (\r\n                    <div className=\"fv-plugins-message-container\">\r\n                      <div className=\"fv-help-block\">\r\n                        {formik.errors.lastname}\r\n                      </div>\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Form.Group className=\"col-6\">\r\n                  <Form.Label className=\"col-12\">Email</Form.Label>\r\n                  {!loading ? (\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"email\"\r\n                      className={getInputClasses(\"email\")}\r\n                      {...formik.getFieldProps(\"email\")}\r\n                      value={formik.values.email}\r\n                      onChange={formik.handleChange}\r\n                    />\r\n                  ) : (\r\n                    <Skeleton animation=\"wave\" variant=\"text\" />\r\n                  )}\r\n                  {messageEmail ? (\r\n                    <p style={{ color: \"red\" }}>{emailMessage}</p>\r\n                  ) : null}\r\n                  {formik.touched.email && formik.errors.email ? (\r\n                    <div className=\"fv-plugins-message-container\">\r\n                      <div className=\"fv-help-block\">{formik.errors.email}</div>\r\n                    </div>\r\n                  ) : null}\r\n                  <Form.Label className=\"text-muted\">\r\n                    Email utilizzata per login\r\n                  </Form.Label>\r\n                </Form.Group>\r\n                <Form.Group className=\"col-6\">\r\n                  <Form.Label className=\"col-12\">Email aziendale</Form.Label>\r\n                  {!loading ? (\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"emailAziendale\"\r\n                      className={getInputClasses(\"emailAziendale\")}\r\n                      {...formik.getFieldProps(\"emailAziendale\")}\r\n                      value={formik.values.emailAziendale}\r\n                      onChange={formik.handleChange}\r\n                    />\r\n                  ) : (\r\n                    <Skeleton animation=\"wave\" variant=\"text\" />\r\n                  )}\r\n                  {messageEmailAziendale ? (\r\n                    <p style={{ color: \"red\" }}>{emailAziendaleMessage}</p>\r\n                  ) : null}\r\n                  {formik.touched.emailAziendale &&\r\n                  formik.errors.emailAziendale ? (\r\n                    <div className=\"fv-plugins-message-container\">\r\n                      <div className=\"fv-help-block\">\r\n                        {formik.errors.emailAziendale}\r\n                      </div>\r\n                    </div>\r\n                  ) : null}\r\n                  <Form.Label className=\"text-muted\">\r\n                    Se presente verrà utilizzata per inviare notifiche\r\n                  </Form.Label>\r\n                </Form.Group>\r\n                <Form.Group className=\"col-6\">\r\n                  <Form.Label className=\"col-12\">Codice fiscale</Form.Label>\r\n                  {!loading ? (\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"ssn\"\r\n                      className={getInputClasses(\"ssn\")}\r\n                      {...formik.getFieldProps(\"ssn\")}\r\n                      value={formik.values.ssn}\r\n                      onChange={formik.handleChange}\r\n                    />\r\n                  ) : (\r\n                    <Skeleton animation=\"wave\" variant=\"text\" />\r\n                  )}\r\n                  {formik.touched.ssn && formik.errors.ssn ? (\r\n                    <div className=\"fv-plugins-message-container\">\r\n                      <div className=\"fv-help-block\">{formik.errors.ssn}</div>\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Form.Group className=\"col-6\">\r\n                  <Form.Label className=\"col-12\">Data di nascita</Form.Label>\r\n                  {!loading ? (\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      name=\"birthday\"\r\n                      className={getInputClasses(\"birthday\")}\r\n                      {...formik.getFieldProps(\"birthday\")}\r\n                      value={formik.values.birthday}\r\n                      onChange={formik.handleChange}\r\n                      required\r\n                    />\r\n                  ) : (\r\n                    <Skeleton animation=\"wave\" variant=\"text\" />\r\n                  )}\r\n                  {formik.touched.birthday && formik.errors.birthday ? (\r\n                    <div className=\"fv-plugins-message-container\">\r\n                      <div className=\"fv-help-block\">\r\n                        {formik.errors.birthday}\r\n                      </div>\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <h6 className=\"col-12 my-6\">Informazioni personali</h6>\r\n                <Form.Group className=\"col-6\">\r\n                  <Form.Label className=\"col-12\">Numero telefono</Form.Label>\r\n                  {!loading ? (\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"phone\"\r\n                      className={getInputClasses(\"phone\")}\r\n                      {...formik.getFieldProps(\"phone\")}\r\n                      value={formik.values.phone}\r\n                      onChange={formik.handleChange}\r\n                    />\r\n                  ) : (\r\n                    <Skeleton animation=\"wave\" variant=\"text\" />\r\n                  )}\r\n                  {messagePhone ? (\r\n                    <p style={{ color: \"red\" }}>{phoneMessage}</p>\r\n                  ) : null}\r\n                  {formik.touched.phone && formik.errors.phone ? (\r\n                    <div className=\"fv-plugins-message-container\">\r\n                      <div className=\"fv-help-block\">{formik.errors.phone}</div>\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Form.Group className=\"col-6\">\r\n                  <Form.Label className=\"col-12\">IBAN</Form.Label>\r\n                  {!loading ? (\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"iban\"\r\n                      className={getInputClasses(\"iban\")}\r\n                      {...formik.getFieldProps(\"iban\")}\r\n                      value={formik.values.iban}\r\n                      onChange={formik.handleChange}\r\n                    />\r\n                  ) : (\r\n                    <Skeleton animation=\"wave\" variant=\"text\" />\r\n                  )}\r\n                  {formik.touched.iban && formik.errors.iban ? (\r\n                    <div className=\"fv-plugins-message-container\">\r\n                      <div className=\"fv-help-block\">{formik.errors.iban}</div>\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Form.Group className=\"col-6\">\r\n                  <Form.Label className=\"col-12\">Nazione</Form.Label>\r\n                  {!loading ? (\r\n                    <Select\r\n                      value={\r\n                        countryUser !== undefined\r\n                          ? {\r\n                              value: countryUser.value,\r\n                              label: countryUser.label,\r\n                            }\r\n                          : \"\"\r\n                      }\r\n                      options={country}\r\n                      onChange={(e) => setCountryUser(e)}\r\n                      placeholder=\"Seleziona nazione...\"\r\n                    />\r\n                  ) : (\r\n                    <Skeleton animation=\"wave\" variant=\"text\" />\r\n                  )}\r\n                </Form.Group>\r\n                {countryUser.label === \"Italia\" ? (\r\n                  <>\r\n                    <Form.Group className=\"col-6\">\r\n                      <Form.Label className=\"col-12\">Regione</Form.Label>\r\n                      {!loading ? (\r\n                        <Select\r\n                          value={\r\n                            regionUser !== undefined\r\n                              ? {\r\n                                  value: regionUser.value,\r\n                                  label: regionUser.label,\r\n                                }\r\n                              : \"\"\r\n                          }\r\n                          options={regione}\r\n                          onChange={(e) => setRegionUser(e)}\r\n                          placeholder=\"Seleziona regione...\"\r\n                        />\r\n                      ) : (\r\n                        <Skeleton animation=\"wave\" variant=\"text\" />\r\n                      )}\r\n                    </Form.Group>\r\n                    <Form.Group className=\"col-6\">\r\n                      <Form.Label className=\"col-12\">Provincia</Form.Label>\r\n                      {!loading ? (\r\n                        <Select\r\n                          value={\r\n                            provinceUser !== undefined\r\n                              ? {\r\n                                  value: provinceUser.value,\r\n                                  label: provinceUser.label,\r\n                                }\r\n                              : \"\"\r\n                          }\r\n                          options={province}\r\n                          onChange={(e) => setProvinceUser(e)}\r\n                          placeholder=\"Seleziona provincia...\"\r\n                        />\r\n                      ) : (\r\n                        <Skeleton animation=\"wave\" variant=\"text\" />\r\n                      )}\r\n                    </Form.Group>\r\n                    <Form.Group className=\"col-6\">\r\n                      <Form.Label className=\"col-12\">Comune</Form.Label>\r\n                      {!loading ? (\r\n                        <Select\r\n                          value={\r\n                            cityUser !== undefined\r\n                              ? {\r\n                                  value: cityUser.value,\r\n                                  label: cityUser.label,\r\n                                }\r\n                              : \"\"\r\n                          }\r\n                          options={city}\r\n                          onChange={(e) => setCityUser(e)}\r\n                          placeholder=\"Seleziona comune...\"\r\n                        />\r\n                      ) : (\r\n                        <Skeleton animation=\"wave\" variant=\"text\" />\r\n                      )}\r\n                    </Form.Group>\r\n                  </>\r\n                ) : (\r\n                  <Form.Group className=\"col-6\">\r\n                    <Form.Label className=\"col-6\">Città</Form.Label>\r\n                    {!loading ? (\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        name=\"city\"\r\n                        className={getInputClasses(\"city\")}\r\n                        {...formik.getFieldProps(\"city\")}\r\n                        value={formik.values.city}\r\n                        onChange={formik.handleChange}\r\n                      />\r\n                    ) : (\r\n                      <Skeleton animation=\"wave\" variant=\"text\" />\r\n                    )}\r\n                    {formik.touched.city && formik.errors.city ? (\r\n                      <div className=\"fv-plugins-message-container\">\r\n                        <div className=\"fv-help-block\">\r\n                          {formik.errors.city}\r\n                        </div>\r\n                      </div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n                )}\r\n                <Form.Group className=\"col-6\">\r\n                  <Form.Label className=\"col-12\">Indirizzo</Form.Label>\r\n                  {!loading ? (\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"address\"\r\n                      className={getInputClasses(\"address\")}\r\n                      {...formik.getFieldProps(\"address\")}\r\n                      value={formik.values.address}\r\n                      onChange={formik.handleChange}\r\n                    />\r\n                  ) : (\r\n                    <Skeleton animation=\"wave\" variant=\"text\" />\r\n                  )}\r\n                  {formik.touched.address && formik.errors.address ? (\r\n                    <div className=\"fv-plugins-message-container\">\r\n                      <div className=\"fv-help-block\">\r\n                        {formik.errors.address}\r\n                      </div>\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Form.Group className=\"col-6\">\r\n                  <Form.Label className=\"col-12\">CAP</Form.Label>\r\n                  {!loading ? (\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"zip_code\"\r\n                      className={getInputClasses(\"zip_code\")}\r\n                      {...formik.getFieldProps(\"zip_code\")}\r\n                      value={formik.values.zip_code}\r\n                      onChange={formik.handleChange}\r\n                    />\r\n                  ) : (\r\n                    <Skeleton animation=\"wave\" variant=\"text\" />\r\n                  )}\r\n                  {formik.touched.zip_code && formik.errors.zip_code ? (\r\n                    <div className=\"fv-plugins-message-container\">\r\n                      <div className=\"fv-help-block\">\r\n                        {formik.errors.zip_code}\r\n                      </div>\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <h6 className=\"col-12 my-6\">Informazioni professionali</h6>\r\n                <Form.Group className=\"col-6\">\r\n                  <Form.Label className=\"col-12\">Partita IVA</Form.Label>\r\n                  {!loading ? (\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"vatNumber\"\r\n                      className={getInputClasses(\"vatNumber\")}\r\n                      value={formik.values.vatNumber}\r\n                      onChange={formik.handleChange}\r\n                    />\r\n                  ) : (\r\n                    <Skeleton animation=\"wave\" variant=\"text\" />\r\n                  )}\r\n                  {formik.touched.vatNumber && formik.errors.vatNumber ? (\r\n                    <div className=\"fv-plugins-message-container\">\r\n                      <div className=\"fv-help-block\">\r\n                        {formik.errors.vatNumber}\r\n                      </div>\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Form.Group className=\"col-6\">\r\n                  <Form.Label className=\"col-12\">Nome compagnia</Form.Label>\r\n                  {!loading ? (\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"companyName\"\r\n                      className={getInputClasses(\"companyName\")}\r\n                      {...formik.getFieldProps(\"companyName\")}\r\n                      value={formik.values.companyName}\r\n                      onChange={formik.handleChange}\r\n                    />\r\n                  ) : (\r\n                    <Skeleton animation=\"wave\" variant=\"text\" />\r\n                  )}\r\n                  {formik.touched.companyName && formik.errors.companyName ? (\r\n                    <div className=\"fv-plugins-message-container\">\r\n                      <div className=\"fv-help-block\">\r\n                        {formik.errors.companyName}\r\n                      </div>\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Form.Group className=\"col-6\">\r\n                  <Form.Label className=\"col-12\">Settore</Form.Label>\r\n                  {!loading ? (\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"moduleName\"\r\n                      className={getInputClasses(\"moduleName\")}\r\n                      value={formik.values.moduleName}\r\n                      onChange={formik.handleChange}\r\n                      {...formik.getFieldProps(\"moduleName\")}\r\n                      disabled={true}\r\n                    />\r\n                  ) : (\r\n                    <Skeleton animation=\"wave\" variant=\"text\" />\r\n                  )}\r\n                  {formik.touched.moduleName && formik.errors.moduleName ? (\r\n                    <div className=\"fv-plugins-message-container\">\r\n                      <div className=\"fv-help-block\">\r\n                        {formik.errors.moduleName}\r\n                      </div>\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Form.Group className=\"col-6\">\r\n                  <Form.Label className=\"col-12\">Dipartimento</Form.Label>\r\n                  {!loading ? (\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"department\"\r\n                      className={getInputClasses(\"department\")}\r\n                      value={formik.values.department}\r\n                      onChange={formik.handleChange}\r\n                      {...formik.getFieldProps(\"department\")}\r\n                      disabled={true}\r\n                    />\r\n                  ) : (\r\n                    <Skeleton animation=\"wave\" variant=\"text\" />\r\n                  )}\r\n                  {formik.touched.department && formik.errors.department ? (\r\n                    <div className=\"fv-plugins-message-container\">\r\n                      <div className=\"fv-help-block\">\r\n                        {formik.errors.department}\r\n                      </div>\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Group>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* end::Body */}\r\n          {result ? (\r\n            <p className=\"float-right col-12\" style={{ color: \"green\" }}>\r\n              Profilo modificato con successo!\r\n            </p>\r\n          ) : null}\r\n          <Button\r\n            variant=\"primary\"\r\n            size=\"sm\"\r\n            className=\"float-right mb-5 mr-5\"\r\n            onClick={formik.handleSubmit}\r\n          >\r\n            Aggiorna profilo\r\n          </Button>\r\n        </div>\r\n\r\n        {/* end::Form */}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\r\nimport * as auth from \"../Auth\";\r\n\r\nfunction EmailSettings(props) {\r\n  // Fields\r\n  const [loading, setloading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.auth.user, shallowEqual);\r\n  useEffect(() => {}, [user]);\r\n  // Methods\r\n  const saveUser = (values, setStatus, setSubmitting) => {\r\n    setloading(true);\r\n    const updatedUser = Object.assign(user, {\r\n      emailSettings: {\r\n        emailNotification: values.emailNotification,\r\n        sendCopyToPersonalEmail: values.sendCopyToPersonalEmail,\r\n        activityRelatesEmail: {\r\n          youHaveNewNotifications: values.youHaveNewNotifications,\r\n          youAreSentADirectMessage: values.youAreSentADirectMessage,\r\n          someoneAddsYouAsAsAConnection: values.someoneAddsYouAsAsAConnection,\r\n          uponNewOrder: values.uponNewOrder,\r\n          newMembershipApproval: values.newMembershipApproval,\r\n          memberRegistration: values.memberRegistration,\r\n        },\r\n        updatesFromKeenthemes: {\r\n          newsAboutKeenthemesProductsAndFeatureUpdates:\r\n            values.newsAboutKeenthemesProductsAndFeatureUpdates,\r\n          tipsOnGettingMoreOutOfKeen: values.tipsOnGettingMoreOutOfKeen,\r\n          thingsYouMissedSindeYouLastLoggedIntoKeen:\r\n            values.thingsYouMissedSindeYouLastLoggedIntoKeen,\r\n          newsAboutMetronicOnPartnerProductsAndOtherServices:\r\n            values.newsAboutMetronicOnPartnerProductsAndOtherServices,\r\n          tipsOnMetronicBusinessProducts: values.tipsOnMetronicBusinessProducts,\r\n        },\r\n      },\r\n    });\r\n    // user for update preparation\r\n    dispatch(props.setUser(updatedUser));\r\n    setTimeout(() => {\r\n      setloading(false);\r\n      setSubmitting(false);\r\n      // Do request to your server for user update, we just imitate user update there, For example:\r\n      // update(updatedUser)\r\n      //  .then(()) => {\r\n      //    setloading(false);\r\n      //  })\r\n      //  .catch((error) => {\r\n      //    setloading(false);\r\n      //    setSubmitting(false);\r\n      //    setStatus(error);\r\n      // });\r\n    }, 1000);\r\n  };\r\n  // UI Helpers\r\n  const initialValues = {\r\n    emailNotification: user.emailSettings.emailNotification,\r\n    sendCopyToPersonalEmail: user.emailSettings.sendCopyToPersonalEmail,\r\n    youHaveNewNotifications:\r\n      user.emailSettings.activityRelatesEmail.youHaveNewNotifications,\r\n    youAreSentADirectMessage:\r\n      user.emailSettings.activityRelatesEmail.youAreSentADirectMessage,\r\n    someoneAddsYouAsAsAConnection:\r\n      user.emailSettings.activityRelatesEmail.someoneAddsYouAsAsAConnection,\r\n    uponNewOrder: user.emailSettings.activityRelatesEmail.uponNewOrder,\r\n    newMembershipApproval:\r\n      user.emailSettings.activityRelatesEmail.newMembershipApproval,\r\n    memberRegistration:\r\n      user.emailSettings.activityRelatesEmail.memberRegistration,\r\n    newsAboutKeenthemesProductsAndFeatureUpdates:\r\n      user.emailSettings.updatesFromKeenthemes\r\n        .newsAboutKeenthemesProductsAndFeatureUpdates,\r\n    tipsOnGettingMoreOutOfKeen:\r\n      user.emailSettings.updatesFromKeenthemes.tipsOnGettingMoreOutOfKeen,\r\n    thingsYouMissedSindeYouLastLoggedIntoKeen:\r\n      user.emailSettings.updatesFromKeenthemes\r\n        .thingsYouMissedSindeYouLastLoggedIntoKeen,\r\n    newsAboutMetronicOnPartnerProductsAndOtherServices:\r\n      user.emailSettings.updatesFromKeenthemes\r\n        .newsAboutMetronicOnPartnerProductsAndOtherServices,\r\n    tipsOnMetronicBusinessProducts:\r\n      user.emailSettings.updatesFromKeenthemes.tipsOnMetronicBusinessProducts,\r\n  };\r\n  const Schema = Yup.object().shape({\r\n    emailNotification: Yup.bool(),\r\n    sendCopyToPersonalEmail: Yup.bool(),\r\n    youHaveNewNotifications: Yup.bool(),\r\n    youAreSentADirectMessage: Yup.bool(),\r\n    someoneAddsYouAsAsAConnection: Yup.bool(),\r\n    uponNewOrder: Yup.bool(),\r\n    newMembershipApproval: Yup.bool(),\r\n    memberRegistration: Yup.bool(),\r\n    newsAboutKeenthemesProductsAndFeatureUpdates: Yup.bool(),\r\n    tipsOnGettingMoreOutOfKeen: Yup.bool(),\r\n    thingsYouMissedSindeYouLastLoggedIntoKeen: Yup.bool(),\r\n    newsAboutMetronicOnPartnerProductsAndOtherServices: Yup.bool(),\r\n    tipsOnMetronicBusinessProducts: Yup.bool(),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      saveUser(values, setStatus, setSubmitting);\r\n    },\r\n    onReset: (values, { resetForm }) => {\r\n      resetForm();\r\n    },\r\n  });\r\n  return (\r\n    <form className=\"card card-custom\" onSubmit={formik.handleSubmit}>\r\n      {loading && <ModalProgressBar />}\r\n\r\n      {/* begin::Header */}\r\n      <div className=\"card-header py-3\">\r\n        <div className=\"card-title align-items-start flex-column\">\r\n          <h3 className=\"card-label font-weight-bolder text-dark\">\r\n            Informazioni Email\r\n          </h3>\r\n          <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n            Imposta password \r\n          </span>\r\n        </div>\r\n        <div className=\"card-toolbar\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-success mr-2\"\r\n            disabled={\r\n              formik.isSubmitting || (formik.touched && !formik.isValid)\r\n            }\r\n          >\r\n            Salva\r\n            {formik.isSubmitting}\r\n          </button>\r\n          <Link\r\n            to=\"/user-profile/profile-overview\"\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            Elimina\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Form */}\r\n      <div className=\"form\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mb-6\">\r\n                Notifiche:\r\n              </h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row align-items-center\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">\r\n              Notifiche email\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <span className=\"switch switch-sm\">\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"emailNotification\"\r\n                    checked={formik.values.emailNotification}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>\r\n                </label>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row align-items-center\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">\r\n              Invia una copia all'email personale\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <span className=\"switch switch-sm\">\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"sendCopyToPersonalEmail\"\r\n                    checked={formik.values.sendCopyToPersonalEmail}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>\r\n                </label>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"separator separator-dashed my-10\"></div>\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mb-6\">\r\n                Attività relativa all'email:\r\n              </h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">\r\n              Notifiche email\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"checkbox-list\">\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"youHaveNewNotifications\"\r\n                    checked={formik.values.youHaveNewNotifications}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Nuove modifiche\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"youAreSentADirectMessage\"\r\n                    checked={formik.values.youAreSentADirectMessage}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span> Invii un messaggio diretto\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"someoneAddsYouAsAsAConnection\"\r\n                    checked={formik.values.someoneAddsYouAsAsAConnection}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span> Aggiunta come collegamento\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">\r\n              Inoltro email:\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"checkbox-list\">\r\n                <label className=\"checkbox checkbox-primary\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"uponNewOrder\"\r\n                    checked={formik.values.uponNewOrder}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Upon new order\r\n                </label>\r\n                <label className=\"checkbox checkbox-primary\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"newMembershipApproval\"\r\n                    checked={formik.values.newMembershipApproval}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>New membership approval\r\n                </label>\r\n                <label className=\"checkbox checkbox-primary\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"memberRegistration\"\r\n                    checked={formik.values.memberRegistration}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Registrazione membro\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"separator separator-dashed my-10\"></div>\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mb-6\">\r\n                Aggiornamenti aziendali:\r\n              </h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">\r\n              Email \r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"checkbox-list\">\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"newsAboutKeenthemesProductsAndFeatureUpdates\"\r\n                    checked={\r\n                      formik.values.newsAboutKeenthemesProductsAndFeatureUpdates\r\n                    }\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>\r\n                  Aggiornamenti riguardo l'azienda \r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"tipsOnGettingMoreOutOfKeen\"\r\n                    checked={formik.values.tipsOnGettingMoreOutOfKeen}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Suggerimenti \r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"thingsYouMissedSindeYouLastLoggedIntoKeen\"\r\n                    checked={\r\n                      formik.values.thingsYouMissedSindeYouLastLoggedIntoKeen\r\n                    }\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Novità rispetto il precedente accesso\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"newsAboutMetronicOnPartnerProductsAndOtherServices\"\r\n                    checked={\r\n                      formik.values\r\n                        .newsAboutMetronicOnPartnerProductsAndOtherServices\r\n                    }\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>News about Metronic on partner products and other\r\n                  services\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"tipsOnMetronicBusinessProducts\"\r\n                    checked={formik.values.tipsOnMetronicBusinessProducts}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Tips on Metronic business products\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Form */}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default connect(null, auth.actions)(EmailSettings);\r\n","import React from \"react\";\r\n\r\nimport {  ListsRichieste } from '../../../_metronic/_partials/widgets';\r\n\r\n// import { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\n\r\nexport function RequestPage() {\r\n  return (\r\n    <div className=\"row\">\r\n\r\n      <div className=\"col-lg-12\">\r\n\r\n      <div className=\"col-lg-12\">\r\n\r\n        <ListsRichieste className=\"card-stretch gutter-b\"></ListsRichieste>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../_metronic/_helpers\";\r\nimport {\r\n} from \"../../../../_metronic/_partials/dropdowns\";\r\n\r\nexport function ProfileCard() {\r\n  const user = useSelector(({ auth }) => auth.user, shallowEqual);\r\n\r\n  useEffect(() => {\r\n    return () => {};\r\n  }, [user]);\r\n\r\n  return (\r\n    <>\r\n      {user && (\r\n        <div\r\n          className=\"flex-row-auto offcanvas-mobile w-250px w-xxl-350px\"\r\n          id=\"kt_profile_aside\"\r\n        >\r\n          <div className=\"card card-custom card-stretch\">\r\n            {/* begin::Body */}\r\n            <div className=\"card-body pt-4\">\r\n              {/* begin::Toolbar */}\r\n              {/* <div className=\"d-flex justify-content-end\">\r\n                <Dropdown className=\"dropdown dropdown-inline\" alignRight>\r\n                  <Dropdown.Toggle\r\n                    className=\"btn btn-clean btn-hover-light-primary btn-sm btn-icon cursor-pointer\"\r\n                    variant=\"transparent\"\r\n                    id=\"dropdown-toggle-top-user-profile\"\r\n                    as={DropdownCustomToggler}\r\n                  >\r\n                    <i className=\"ki ki-bold-more-hor\"></i>\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu className=\"dropdown-menu dropdown-menu-sm dropdown-menu-right\">\r\n                    <DropdownMenu4></DropdownMenu4>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </div> */}\r\n              {/* end::Toolbar */}\r\n              {/* begin::User */}\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-60 symbol-xxl-100 mr-5 align-self-start align-self-xxl-center\">\r\n                  <div\r\n                    className=\"symbol-label\"\r\n                    style={{ backgroundImage: `url(${user.pic})` }}\r\n                  ></div>\r\n                  {/* style=\"background-i\r\n                  mage:url('/metronic/theme/html/demo1/dist/assets/media/users/300_21.jpg')\" */}\r\n                </div>\r\n              </div>\r\n              {/* end::User */}\r\n              {/* begin::Contact */}\r\n              <div className=\"py-9\">\r\n                <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                  <span className=\"font-weight-bold mr-2\">Email:</span>\r\n                  <span className=\"text-muted text-hover-primary\">\r\n                    {user.email}\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                  <span className=\"font-weight-bold mr-2\">Telefono:</span>\r\n                  <span className=\"text-muted\">{user.phone}</span>\r\n                </div>\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <span className=\"font-weight-bold mr-2\">Località:</span>\r\n                  <span className=\"text-muted\">{user.city}</span>\r\n                </div>\r\n              </div>\r\n              {/* end::Contact */}\r\n              {/* begin::Nav */}\r\n              <div className=\"navi navi-bold navi-hover navi-active navi-link-rounded\">\r\n                <div className=\"navi-item mb-2\">\r\n                  <NavLink\r\n                    to=\"/user-profile/request-page\"\r\n                    className=\"navi-link py-4\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    <span className=\"navi-icon mr-2\">\r\n                      <span className=\"svg-icon\">\r\n                        <SVG\r\n                          src={toAbsoluteUrl(\r\n                            \"/media/svg/icons/Communication/Chat1.svg\"\r\n                          )}\r\n                        ></SVG>{\" \"}\r\n                      </span>\r\n                    </span>\r\n                    <span className=\"navi-text font-size-lg\">\r\n                      Richieste\r\n                    </span>\r\n                  </NavLink>\r\n                </div>\r\n\r\n                <div className=\"navi-item mb-2\">\r\n                  <NavLink\r\n                    to=\"/user-profile/personal-information\"\r\n                    className=\"navi-link py-4\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    <span className=\"navi-icon mr-2\">\r\n                      <span className=\"svg-icon\">\r\n                        <SVG\r\n                          src={toAbsoluteUrl(\r\n                            \"/media/svg/icons/General/User.svg\"\r\n                          )}\r\n                        ></SVG>{\" \"}\r\n                      </span>\r\n                    </span>\r\n                    <span className=\"navi-text font-size-lg\">\r\n                      Informazioni profilo\r\n                    </span>\r\n                  </NavLink>\r\n                </div>\r\n                {/* <div className=\"navi-item mb-2\">\r\n                  <NavLink\r\n                    to=\"/user-profile/account-information\"\r\n                    className=\"navi-link py-4\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    <span className=\"navi-icon mr-2\">\r\n                      <span className=\"svg-icon\">\r\n                        <SVG\r\n                          src={toAbsoluteUrl(\r\n                            \"/media/svg/icons/Code/Compiling.svg\"\r\n                          )}\r\n                        ></SVG>{\" \"}\r\n                      </span>\r\n                    </span>\r\n                    <span className=\"navi-text font-size-lg\">\r\n                      Informazioni Account\r\n                    </span>\r\n                  </NavLink>\r\n                </div> */}\r\n                <div className=\"navi-item mb-2\">\r\n                  <NavLink\r\n                    to=\"/user-profile/change-password\"\r\n                    className=\"navi-link py-4\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    <span className=\"navi-icon mr-2\">\r\n                      <span className=\"svg-icon\">\r\n                        <SVG\r\n                          src={toAbsoluteUrl(\r\n                            \"/media/svg/icons/Communication/Shield-user.svg\"\r\n                          )}\r\n                        ></SVG>{\" \"}\r\n                      </span>\r\n                    </span>\r\n                    <span className=\"navi-text font-size-lg\">\r\n                      Cambia Password\r\n                    </span>\r\n                    <span className=\"navi-label\">\r\n                    </span>\r\n                  </NavLink>\r\n                </div>\r\n                {/* <div className=\"navi-item mb-2\">\r\n                  <NavLink\r\n                    to=\"/user-profile/email-settings\"\r\n                    className=\"navi-link py-4\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    <span className=\"navi-icon mr-2\">\r\n                      <span className=\"svg-icon\">\r\n                        <SVG\r\n                          src={toAbsoluteUrl(\r\n                            \"/media/svg/icons/Communication/Mail-opened.svg\"\r\n                          )}\r\n                        ></SVG>{\" \"}\r\n                      </span>\r\n                    </span>\r\n                    <span className=\"navi-text font-size-lg\">\r\n                      Email \r\n                    </span>\r\n                  </NavLink>\r\n                </div> */}\r\n                <div className=\"navi-item mb-2\">\r\n                </div>\r\n                <div className=\"navi-item mb-2\">\r\n                </div>\r\n              </div>\r\n              {/* end::Nav */}\r\n            </div>\r\n            {/* end::Body */}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport AccountInformation from \"./AccountInformation\";\r\nimport { ProfileOverview } from \"./ProfileOverview\";\r\nimport ChangePassword from \"./ChangePassword\";\r\nimport PersonaInformation from \"./PersonaInformation\";\r\nimport EmailSettings from \"./EmailSettings\";\r\nimport { RequestPage } from \"./RequestPage\";\r\nimport { ProfileCard } from \"./components/ProfileCard\";\r\n\r\nexport default function UserProfilePage() {\r\n  const suhbeader = useSubheader();\r\n  suhbeader.setTitle(\"User profile\");\r\n  return (\r\n    <div className=\"d-flex flex-row\">\r\n      <ProfileCard></ProfileCard>\r\n      <div className=\"flex-row-fluid ml-lg-8\">\r\n        <Switch>\r\n          <Redirect\r\n            from=\"/user-profile\"\r\n            exact={true}\r\n            to=\"/user-profile/profile-overview\"\r\n          />\r\n          <Route\r\n            path=\"/user-profile/profile-overview\"\r\n            component={ProfileOverview}\r\n          />\r\n          <Route\r\n            path=\"/user-profile/request-page\"\r\n            component={RequestPage}\r\n          />\r\n          <Route\r\n            path=\"/user-profile/account-information\"\r\n            component={AccountInformation}\r\n          />\r\n          <Route\r\n            path=\"/user-profile/change-password\"\r\n            component={ChangePassword}\r\n          />\r\n          <Route\r\n            path=\"/user-profile/email-settings\"\r\n            component={EmailSettings}\r\n          />\r\n          <Route\r\n            path=\"/user-profile/personal-information\"\r\n            component={PersonaInformation}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}